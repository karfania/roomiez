spring.profiles.active=@spring.profiles.active@
spring.datasource.url=jdbc:mysql://localhost:3306/lab9
spring.datasource.username=root
spring.datasource.password=NguyenAnPho21???
##Change line below to create-drop for testing purposes
spring.jpa.hibernate.ddl-auto=create-drop

spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.MySQL5Dialect
#spring.jpa.properties.hibernate.format_sql=true

server.port=8080

spring.mail.host=smtp.gmail.com
spring.mail.port=587
spring.mail.username=noreply.roomiezapp@gmail.com
spring.mail.password=
spring.mail.properties.mail.smtp.auth=true
spring.mail.properties.mail.smtp.starttls.enable=true

###CLOUD-SQL-CONFIGURATIONS
#database=mysql
#spring.cloud.gcp.sql.database-name=roomiez_db
#spring.cloud.gcp.sql.instance-connection-name= roomiezbackend:us-central1:my-instance
## Initialize the database since the newly created Cloud SQL database has no tables. The following flag is for Spring Boot 2.5+.
#spring.sql.init.mode=always
## So app starts despite "table already exists" errors.
##spring.datasource.continue-on-error=true
## Enforces database initialization
##spring.datasource.initialization-mode=always
##spring.datasource.username=root
##spring.datasource.password=
##spring.cloud.gcp.project-id=roomiezbackend
##spring.cloud.config.uri=http://localhost:8080
#spring.datasource.url=jdbc:mysql://google/roomiez_db?socketFactory=com.google.cloud.sql.mysql.SocketFactory&cloudSqlInstance=my-instance
#spring.profiles.active=mysql
